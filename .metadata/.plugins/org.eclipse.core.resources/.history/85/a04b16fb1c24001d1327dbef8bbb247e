/** [Queue 인터페이스]
 * Queue : '선착순'
 * 			줄을 선 대기열처럼 먼저 추가된 데이터부터 꺼내서 사용하는 방식 (FIFO : First In First Out)
 */
package queue;

import java.util.ArrayList;

//ArrayList로 Queue 구현하기
class MyQueue {
	//멤버변수 : ArrayList 포함관계
		//[포함관계 순서-1]
		private ArrayList<String> arrayStack;

		MyQueue() { //[포함관계 순서-2]
			arrayStack = new ArrayList<String>();
		}
		
		//[포함관계 순서-3]
		//외부에 노출된 메서드 - push, pop, size
		void push(String data) {
			arrayStack.add(data); //실질적인 메서드
		}
		
		String pop() { 
			//int number = arrayStack.size(); //실질적인 메서드
			int number = size();
			
			if(number == 0) {
				System.out.println("스택이 비었습니다.");
				return null;
			}
			
			return arrayStack.remove(number-1); //실질적인 메서드     (전체 size -1 = ArrayList의 마지막 index)
		}
		
		int size() { 
			return arrayStack.size(); //실질적인 메서드
		}
	
}//MyQueue 클래스 끝

public class QueueTest_ArrayList {

	public static void main(String[] args) {
		
		
	}

}
