package object.clone;

class Point implements Cloneable{ //1. 객체를 복제할 수 있는 클래스라는 것을 알리기 위해 Cloneable 인터페이스 구현(implements Cloneable) 
	private int x;
	private int y;
	
	Point(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}

	void showPosition() {
		System.out.printf("[%d, %d]", x, y);
	}

	//매개값으로 기존값을 변경
	void setPosition(int x, int y) {
		this.x = x;
		this.y = y;
	}
	
	@Override //2. Object로부터 상속받은 clone() 재정의하여 Point객체를 복제할 수 있도록 재정의함
	protected Object clone() throws CloneNotSupportedException {
		return super.clone();
	} 
	
}//Point 클래스 끝

class Rectangle {
	//[Point 포함관계 순서-1]
	private Point upperLeft, lowerRight;
	
	Rectangle(int x1, int y1, int x2, int y2) {
		super(); //컴파일러가 매개변수 없는 생성자 자동으로 넣음
		upperLeft = new Point(x1, y1);		//[Point 포함관계 순서-2]
		lowerRight = new Point(x2, y2);
	}
	
	void showPosition() {
		System.out.println("사각형의 위치정보....");
		System.out.print("좌 상단 : "); 
		upperLeft.showPosition(); 		//[x1, y1]
		
		System.out.print(", 우 하단 : ");
		lowerRight.showPosition();		//[x2, y2]
		
		System.out.println("\n"); //커서 내리고 빈 줄 \n\n
	}
	
	//매개값으로 기존값을 변경
	void setPosition(int x1, int y1, int x2, int y2) { //3,3  4,4
		upperLeft.setPosition(x1, y1);
		lowerRight.setPosition(x2, y2);
	}

	@Override
	protected Object clone() throws CloneNotSupportedException {
		return super.clone();
	}
	
}//Rectangle 클래스 끝

public class ShallowPointCopy {

	public static void main(String[] args) {
		System.out.println("---- Point 복제 테스트 ----");
		Point p = new Point(1, 1);
		System.out.print("원본 Point : ");
		p.showPosition();
		System.out.println(); //빈 줄
		
		Point pointCpy;
		try {
			pointCpy = (Point)p.clone(); //강제 형변환(DownCasting)
			
			System.out.print("복제 Point : ");
			pointCpy.showPosition();
			System.out.println(); //빈 줄
			
			System.out.println("-- [원본 Point 정보 변경] --");
			p.setPosition(3, 3);
			
			System.out.print("원본 Point : ");
			p.showPosition();
			System.out.println(); //빈 줄
			
			System.out.print("복제 Point : ");
			pointCpy.showPosition();
			System.out.println(); //빈 줄
			
		} catch (CloneNotSupportedException e) {
			e.printStackTrace();
		}
	}

}
